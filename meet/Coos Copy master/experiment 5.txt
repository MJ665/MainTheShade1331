                             experiment 5

Aim:-To write a c program to simulate the CPU scheduling algorithm First Come First Serve (FCFS)

Lab Objective: To calculate the average waiting time using the FCFS

Description :-
To calculate the average waiting time using the FCFS algorithm first the waiting time of
the first process is kept zero and the waiting time of the second process is the burst time of the first
process and the waiting time of the third process is the sum of the burst times of the first and the
second process and so on.
After calculating all the waiting times the average waiting time is calculated as the average of all the
waiting times. FCFS mainly says first come first serve the algorithm which came first will be served first.

Algorithm:
Step 1: Start the process
Step 2: Accept the number of processes in the ready Queue
Step 3: For each process in the ready Q, assign the process name and the burst time Step 4: Set the waiting of the first process as ‗0‘and its burst time as its turnaround time Step 5: for each process in the Ready Q calculate a). Waiting time (n) = waiting time
(n-1) + Burst time
(n-1) b). Turnaround time (n)= waiting time(n)+Burst time(n)
Step 6: Calculate a) Average waiting time = Total waiting Time / Number of process
b) Average Turnaround time = Total Turnaround Time / Number of process Step 7: Stop the process

Source Code:
#include <stdio.h>

int main() {
int bt[20], wt[20], tat[20]; int i, n;
float wtavg, tatavg;
 


printf("\nEnter the number of processes -- "); scanf("%d", &n);

for (i = 0; i < n; i++) {
printf("\nEnter Burst Time for Process %d -- ", i); scanf("%d", &bt[i]);
}
wt[0] = wtavg = 0; tat[0] = tatavg = bt[0];

for (i = 1; i < n; i++) {
wt[i] = wt[i - 1] + bt[i - 1];
tat[i] = tat[i - 1] + bt[i]; wtavg = wtavg + wt[i]; tatavg = tatavg + tat[i];
}

printf("\t PROCESS \tBURST TIME \t WAITING TIME\t TURNAROUND TIME\n");

for (i = 0; i < n; i++) {
printf("\n\t P%d \t\t %d \t\t %d \t\t %d", i, bt[i], wt[i], tat[i]);
}

printf("\nAverage Waiting Time -- %f", wtavg / n); printf("\nAverage Turnaround Time -- %f", tatavg / n);

printf("\nPress Enter to exit..."); getchar(); // Wait for Enter key

return 0;
}

Output:
Enter the number of processes -- 2 Enter Burst Time for Process 0 -- 2 Enter Burst Time for Process 1 -- 1
PROCESS	BURST TIME	WAITING TIME	TURNAROUND TIME
P0	2	0	2	

Result:
The algorithm outlines the process of calculating the average waiting time for a set of processes using the First-Come-First-Serve (FCFS) scheduling approach. FCFS schedules processes in the order they arrive. Here's a simplified breakdown:
1. Start the process.
2. Accept the number of processes.
3. Assign process names and burst times.
4. Set the first process's waiting time to 0 and calculate its turnaround time.
5. For each subsequent process, compute waiting and turnaround times based on previous values.
6. Calculate the average waiting and turnaround times.
7. Stop the process.

Discussion:
- FCFS is a straightforward scheduling method, executing processes in their arrival order.
- Waiting time and turnaround time help assess scheduling efficiency.
- FCFS has limitations, such as the convoy effect, where long processes delay shorter ones.

Conclusion:
The algorithm provides insight into FCFS scheduling's performance. However, other scheduling methods may be more effective in specific scenarios. Understanding waiting and turnaround times is essential for evaluating scheduling strategies.
